{"ast":null,"code":"import _slicedToArray from\"C:/web-dev/GitHub/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";export default function computerMove(array,player){var cross=[];var circle=[];array.forEach(function(el,i){if(el===1){cross.push(i);}if(el===2){circle.push(i);}});var winning=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];if(cross.length<=1&&circle.length<=1){//FIRST TURN\nif(!cross.includes(4)&&!circle.includes(4)){array.splice(4,1,player);}else if(cross.includes(4)||circle.includes(4)){var options=[0,2,6,8];var randomNum=Math.floor(Math.random()*options.length);if(circle.includes(options[randomNum])){//ABSOLUTE FIRST TURN\narray.splice(options[randomNum+1],1,player);}else{array.splice(options[randomNum],1,player);}}}else if(cross.length>=2){//SECOND+ TURN\nvar moved=false;function circleFirst(){if(!moved){//searching for a possible win for circle\nfor(var i=0;i<winning.length;i++){var _winning$i=_slicedToArray(winning[i],3),a=_winning$i[0],b=_winning$i[1],c=_winning$i[2];if(circle.includes(a)&&circle.includes(b)&&!cross.includes(c)){array.splice(c,1,player);moved=true;}else if(circle.includes(a)&&circle.includes(c)&&!cross.includes(b)){array.splice(b,1,player);moved=true;}else if(circle.includes(b)&&circle.includes(c)&&!cross.includes(a)){array.splice(a,1,player);moved=true;}}}}function crossFirst(){if(!moved){if(cross.length===2){//special case if computer is second and second turn\nif(circle.includes(4)&&cross.includes(3)&&cross.includes(1)){array.splice(0,1,player);moved=true;}else if(circle.includes(4)&&cross.includes(1)&&cross.includes(5)){array.splice(2,1,player);moved=true;}else if(circle.includes(4)&&cross.includes(5)&&cross.includes(7)){array.splice(8,1,player);moved=true;}else if(circle.includes(4)&&cross.includes(7)&&cross.includes(3)){array.splice(6,1,player);moved=true;}}if(!moved){//searching for a possible win for cross\nfor(var i=0;i<winning.length;i++){var _winning$i2=_slicedToArray(winning[i],3),a=_winning$i2[0],b=_winning$i2[1],c=_winning$i2[2];if(cross.includes(a)&&cross.includes(b)&&!circle.includes(c)){array.splice(c,1,player);moved=true;}else if(cross.includes(a)&&cross.includes(c)&&!circle.includes(b)){array.splice(b,1,player);moved=true;}else if(cross.includes(b)&&cross.includes(c)&&!circle.includes(a)){array.splice(a,1,player);moved=true;}}}}}var emptyArray=[];array.forEach(function(el,i){if(el===null){emptyArray.push(i);}});if(!moved){if(player===1){// STRATEGIES FOR ATTACK IF YOU ARE NOT UNDER ONE\ncrossFirst();circleFirst();if(!moved){for(var i=0;i<winning.length;i++){var _winning$i3=_slicedToArray(winning[i],3),a=_winning$i3[0],b=_winning$i3[1],c=_winning$i3[2];if(!moved){if(cross.includes(a)&&emptyArray.includes(b)&&emptyArray.includes(c)){array.splice(c,1,player);moved=true;}else if(cross.includes(b)&&emptyArray.includes(a)&&emptyArray.includes(c)){array.splice(a,1,player);moved=true;}else if(cross.includes(c)&&emptyArray.includes(a)&&emptyArray.includes(b)){array.splice(a,1,player);moved=true;}}}}}else if(player===2){circleFirst();crossFirst();if(!moved){for(var _i=0;_i<winning.length;_i++){var _winning$_i=_slicedToArray(winning[_i],3),_a=_winning$_i[0],_b=_winning$_i[1],_c=_winning$_i[2];if(!moved){if(circle.includes(_a)&&emptyArray.includes(_b)&&emptyArray.includes(_c)){array.splice(_c,1,player);moved=true;}else if(circle.includes(_b)&&emptyArray.includes(_a)&&emptyArray.includes(_c)){array.splice(_a,1,player);moved=true;}else if(circle.includes(_c)&&emptyArray.includes(_a)&&emptyArray.includes(_b)){array.splice(_a,1,player);moved=true;}}}}}}if(!moved){var _randomNum=Math.floor(Math.random()*emptyArray.length);array.splice(emptyArray[_randomNum],1,player);moved=true;}}return array;}","map":{"version":3,"sources":["C:/web-dev/GitHub/tic-tac-toe/src/functions/computerMove.js"],"names":["computerMove","array","player","cross","circle","forEach","el","i","push","winning","length","includes","splice","options","randomNum","Math","floor","random","moved","circleFirst","a","b","c","crossFirst","emptyArray"],"mappings":"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","sourcesContent":["export default function computerMove(array, player) {\r\n    let cross = []\r\n    let circle = []\r\n\r\n    array.forEach( (el, i) => {\r\n        if (el === 1) { cross.push(i)}\r\n        if (el === 2) { circle.push(i)}\r\n    })\r\n\r\n    const winning = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ]\r\n\r\n\r\n    if (cross.length <= 1 && circle.length <= 1) { //FIRST TURN\r\n        \r\n        if (!cross.includes(4) && !circle.includes(4)) {\r\n            array.splice(4, 1, player)\r\n        \r\n        } else if (cross.includes(4) || circle.includes(4)) {\r\n            const options = [0, 2, 6, 8]\r\n            let randomNum = Math.floor(Math.random()*options.length)\r\n            if (circle.includes(options[randomNum])) { //ABSOLUTE FIRST TURN\r\n                array.splice(options[(randomNum + 1)], 1, player)\r\n\r\n            } else { \r\n                array.splice(options[randomNum], 1, player) \r\n            }\r\n        }\r\n\r\n    } else if (cross.length >= 2) { //SECOND+ TURN\r\n        let moved = false\r\n\r\n        function circleFirst() {\r\n            if (!moved) { //searching for a possible win for circle\r\n                for(let i=0; i<winning.length; i++) {\r\n                    const [a, b, c] = winning[i]\r\n                    if (circle.includes(a) && circle.includes(b) && !cross.includes(c)) {\r\n                        array.splice(c, 1, player)\r\n                        moved = true\r\n                    } else if (circle.includes(a) && circle.includes(c) && !cross.includes(b)) {\r\n                        array.splice(b, 1, player)\r\n                        moved = true\r\n                    } else if (circle.includes(b) && circle.includes(c) && !cross.includes(a)) {\r\n                        array.splice(a, 1, player)\r\n                        moved = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function crossFirst() {\r\n            if (!moved) { \r\n                if (cross.length === 2) { //special case if computer is second and second turn\r\n                    if (circle.includes(4) && cross.includes(3) && cross.includes(1)) {\r\n                        array.splice(0, 1, player)\r\n                        moved = true\r\n                    } else if (circle.includes(4) && cross.includes(1) && cross.includes(5)) {\r\n                        array.splice(2, 1, player)\r\n                        moved = true\r\n                    } else if (circle.includes(4) && cross.includes(5) && cross.includes(7)) {\r\n                        array.splice(8, 1, player)\r\n                        moved = true\r\n                    } else if (circle.includes(4) && cross.includes(7) && cross.includes(3)) {\r\n                        array.splice(6, 1, player)\r\n                        moved = true\r\n                    }\r\n                }\r\n\r\n                if(!moved) { //searching for a possible win for cross\r\n                    for(let i=0; i<winning.length; i++) {\r\n                        const [a, b, c] = winning[i]\r\n                        if (cross.includes(a) && cross.includes(b) && !circle.includes(c)) {\r\n                            array.splice(c, 1, player)\r\n                            moved = true\r\n                        } else if (cross.includes(a) && cross.includes(c) && !circle.includes(b)) {\r\n                            array.splice(b, 1, player)\r\n                            moved = true\r\n                        } else if (cross.includes(b) && cross.includes(c) && !circle.includes(a)) {\r\n                            array.splice(a, 1, player)\r\n                            moved = true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let emptyArray = []\r\n            array.forEach((el, i) => {\r\n                if (el === null) { emptyArray.push(i)}\r\n            })\r\n\r\n        if (!moved) {   \r\n            if (player === 1) { // STRATEGIES FOR ATTACK IF YOU ARE NOT UNDER ONE\r\n                crossFirst()\r\n                circleFirst()\r\n                if (!moved) {\r\n                    for(let i=0; i<winning.length; i++) {\r\n                        const [a, b, c] = winning[i]\r\n                        if (!moved) {\r\n                            if (cross.includes(a) && emptyArray.includes(b) && emptyArray.includes(c)) {\r\n                                array.splice(c, 1, player)\r\n                                moved = true\r\n                            } else if (cross.includes(b) && emptyArray.includes(a) && emptyArray.includes(c)) {\r\n                                array.splice(a, 1, player)\r\n                                moved = true\r\n                            } else if (cross.includes(c) && emptyArray.includes(a) && emptyArray.includes(b)) {\r\n                                array.splice(a, 1, player)\r\n                                moved = true\r\n    \r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else if (player === 2) {\r\n                circleFirst()\r\n                crossFirst()\r\n                if (!moved) {\r\n                    for(let i=0; i<winning.length; i++) {\r\n                        const [a, b, c] = winning[i]\r\n                        if (!moved) {\r\n                            if (circle.includes(a) && emptyArray.includes(b) && emptyArray.includes(c)) {\r\n                                array.splice(c, 1, player)\r\n                                moved = true\r\n                            } else if (circle.includes(b) && emptyArray.includes(a) && emptyArray.includes(c)) {\r\n                                array.splice(a, 1, player)\r\n                                moved = true\r\n                            } else if (circle.includes(c) && emptyArray.includes(a) && emptyArray.includes(b)) {\r\n                                array.splice(a, 1, player)\r\n                                moved = true\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!moved) {\r\n            let randomNum = Math.floor(Math.random()*emptyArray.length)\r\n            array.splice(emptyArray[randomNum], 1, player)\r\n            moved = true\r\n        }\r\n    }\r\n    return array\r\n}\r\n"]},"metadata":{},"sourceType":"module"}