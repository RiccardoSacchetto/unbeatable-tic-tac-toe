{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-dev\\\\GitHub\\\\tic-tac-toe\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Box from \"./Box\";\nimport Footer from \"./Footer\";\nimport winFunction from \"../functions/winFunction.js\";\nimport computerMove from \"../functions/computerMove\"; // Legenda: \n// 0 || null = null\n// 1= cross\n// 2= circle\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const [crossIsNext, setCrossIsNext] = useState(true);\n  const [boxes, setBoxes] = useState(Array(9).fill(null));\n  const lineClass = winFunction(boxes);\n  const [computerTurn, setComputerTurn] = useState(2);\n  const win = handleWinner();\n\n  function handleWinner() {\n    if (boxes.includes(null) === false || lineClass !== undefined) {\n      return true;\n    } else return false;\n  }\n\n  function handleTurn(num) {\n    if (boxes[num] === null && win === false) {\n      let tempArrayBoxes = [...boxes];\n      tempArrayBoxes[num] = crossIsNext ? 1 : 2;\n      setBoxes(tempArrayBoxes);\n      setCrossIsNext(!crossIsNext);\n    }\n  }\n\n  function handleGame() {\n    if (computerTurn === 1) {\n      setComputerTurn(2);\n    } else {\n      setComputerTurn(1);\n    }\n\n    setBoxes(Array(9).fill(null));\n    setCrossIsNext(true);\n  }\n\n  useEffect(() => {\n    if (!win && (computerTurn === 2 && !crossIsNext || computerTurn === 1 && crossIsNext)) {\n      setTimeout(() => {\n        let tempBoxes = computerMove(boxes, computerTurn);\n        setBoxes(tempBoxes);\n        setCrossIsNext(!crossIsNext);\n      }, 150);\n    }\n  }, [crossIsNext, computerTurn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"game\",\n      className: lineClass,\n      children: boxes.map((box, i) => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          id: i,\n          boxes: box,\n          onClick: handleTurn\n        }, i + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      win: win,\n      boxes: boxes,\n      turn: computerTurn,\n      onClick: handleGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"Ta4l+fMgTXLem72Mcwsg7T28aJM=\");\n\n_c = Game;\nexport default Game;\n/* do a big check and if is okay jus style the text of the winner*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/web-dev/GitHub/tic-tac-toe/src/components/Game.js"],"names":["React","useEffect","useState","Box","Footer","winFunction","computerMove","Game","crossIsNext","setCrossIsNext","boxes","setBoxes","Array","fill","lineClass","computerTurn","setComputerTurn","win","handleWinner","includes","undefined","handleTurn","num","tempArrayBoxes","handleGame","setTimeout","tempBoxes","map","box","i"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Box from \"./Box\"\r\nimport Footer from \"./Footer\";\r\nimport winFunction from \"../functions/winFunction.js\"\r\nimport computerMove from \"../functions/computerMove\"\r\n\r\n// Legenda: \r\n// 0 || null = null\r\n// 1= cross\r\n// 2= circle\r\n\r\nfunction Game() {\r\n    const [crossIsNext, setCrossIsNext] = useState(true)\r\n    const [boxes, setBoxes] = useState(Array(9).fill(null))\r\n    const lineClass = winFunction(boxes)\r\n    const [computerTurn, setComputerTurn] = useState(2)\r\n    const win = handleWinner()\r\n    function handleWinner() {\r\n        if(boxes.includes(null) === false || lineClass !== undefined) { return true } else return false\r\n    }\r\n\r\n    function handleTurn(num) {\r\n        \r\n        if(boxes[num] === null && win === false) {\r\n            let tempArrayBoxes = [...boxes]\r\n            tempArrayBoxes[num] = crossIsNext ? 1 : 2\r\n            setBoxes(tempArrayBoxes)\r\n            setCrossIsNext(!crossIsNext)\r\n        }      \r\n    }\r\n\r\n    function handleGame() {\r\n        if (computerTurn === 1) {\r\n            setComputerTurn(2)\r\n        } else { \r\n            setComputerTurn(1)\r\n        }\r\n        setBoxes(Array(9).fill(null))\r\n        setCrossIsNext(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ((!win) && ((computerTurn === 2 && !crossIsNext) || (computerTurn === 1 && crossIsNext))) {\r\n            setTimeout(() => {\r\n                let tempBoxes = computerMove(boxes, computerTurn)\r\n                setBoxes(tempBoxes)\r\n                setCrossIsNext(!crossIsNext)\r\n            }, 150)\r\n        }   \r\n    }, [crossIsNext, computerTurn])\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"game\" className={lineClass}>\r\n                {boxes.map( (box, i) => {\r\n                    return (\r\n                        <Box key={i + 1 } id={i} boxes={box} onClick={handleTurn}/>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n            <Footer win={win} boxes={boxes} turn={computerTurn} onClick={handleGame}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game\r\n\r\n\r\n    /* do a big check and if is okay jus style the text of the winner*/"]},"metadata":{},"sourceType":"module"}