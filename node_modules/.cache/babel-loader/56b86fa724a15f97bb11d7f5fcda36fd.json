{"ast":null,"code":"import _toConsumableArray from\"C:/web-dev/GitHub/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/web-dev/GitHub/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import Box from\"./Box\";import Footer from\"./Footer\";import winFunction from\"../functions/winFunction.js\";import computerMove from\"../functions/computerMove\";// Legenda: \n// 0 || null = null\n// 1= cross\n// 2= circle\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Game(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),crossIsNext=_useState2[0],setCrossIsNext=_useState2[1];var _useState3=useState(Array(9).fill(null)),_useState4=_slicedToArray(_useState3,2),boxes=_useState4[0],setBoxes=_useState4[1];var lineClass=winFunction(boxes);var _useState5=useState(2),_useState6=_slicedToArray(_useState5,2),computerTurn=_useState6[0],setComputerTurn=_useState6[1];var win=handleWinner();function handleWinner(){if(boxes.includes(null)===false||lineClass!==undefined){return true;}else return false;}function handleTurn(num){if(boxes[num]===null&&win===false){var tempArrayBoxes=_toConsumableArray(boxes);tempArrayBoxes[num]=crossIsNext?1:2;setBoxes(tempArrayBoxes);setCrossIsNext(!crossIsNext);}}function handleGame(){if(computerTurn===1){setComputerTurn(2);}else{setComputerTurn(1);}setBoxes(Array(9).fill(null));setCrossIsNext(true);}useEffect(function(){if(!win&&(computerTurn===2&&!crossIsNext||computerTurn===1&&crossIsNext)){setTimeout(function(){var tempBoxes=computerMove(boxes,computerTurn);setBoxes(tempBoxes);setCrossIsNext(!crossIsNext);},150);}},[crossIsNext,computerTurn]);return/*#__PURE__*/_jsxs(\"div\",{id:\"app\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"game\",className:lineClass,children:boxes.map(function(box,i){return/*#__PURE__*/_jsx(Box,{id:i,boxes:box,onClick:handleTurn},i+1);})}),/*#__PURE__*/_jsx(Footer,{win:win,boxes:boxes,turn:computerTurn,onClick:handleGame})]});}export default Game;/* do a big check and if is okay jus style the text of the winner*/","map":{"version":3,"sources":["C:/web-dev/GitHub/tic-tac-toe/src/components/Game.js"],"names":["React","useEffect","useState","Box","Footer","winFunction","computerMove","Game","crossIsNext","setCrossIsNext","Array","fill","boxes","setBoxes","lineClass","computerTurn","setComputerTurn","win","handleWinner","includes","undefined","handleTurn","num","tempArrayBoxes","handleGame","setTimeout","tempBoxes","map","box","i"],"mappings":"wOAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CAEA;AACA;AACA;AACA;wFAEA,QAASC,CAAAA,IAAT,EAAgB,CACZ,cAAsCL,QAAQ,CAAC,IAAD,CAA9C,wCAAOM,WAAP,eAAoBC,cAApB,eACA,eAA0BP,QAAQ,CAACQ,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAlC,yCAAOC,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,SAAS,CAAGT,WAAW,CAACO,KAAD,CAA7B,CACA,eAAwCV,QAAQ,CAAC,CAAD,CAAhD,yCAAOa,YAAP,eAAqBC,eAArB,eACA,GAAMC,CAAAA,GAAG,CAAGC,YAAY,EAAxB,CACA,QAASA,CAAAA,YAAT,EAAwB,CACpB,GAAGN,KAAK,CAACO,QAAN,CAAe,IAAf,IAAyB,KAAzB,EAAkCL,SAAS,GAAKM,SAAnD,CAA8D,CAAE,MAAO,KAAP,CAAa,CAA7E,IAAmF,OAAO,MAAP,CACtF,CAED,QAASC,CAAAA,UAAT,CAAoBC,GAApB,CAAyB,CAErB,GAAGV,KAAK,CAACU,GAAD,CAAL,GAAe,IAAf,EAAuBL,GAAG,GAAK,KAAlC,CAAyC,CACrC,GAAIM,CAAAA,cAAc,oBAAOX,KAAP,CAAlB,CACAW,cAAc,CAACD,GAAD,CAAd,CAAsBd,WAAW,CAAG,CAAH,CAAO,CAAxC,CACAK,QAAQ,CAACU,cAAD,CAAR,CACAd,cAAc,CAAC,CAACD,WAAF,CAAd,CACH,CACJ,CAED,QAASgB,CAAAA,UAAT,EAAsB,CAClB,GAAIT,YAAY,GAAK,CAArB,CAAwB,CACpBC,eAAe,CAAC,CAAD,CAAf,CACH,CAFD,IAEO,CACHA,eAAe,CAAC,CAAD,CAAf,CACH,CACDH,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAR,CACAF,cAAc,CAAC,IAAD,CAAd,CACH,CAEDR,SAAS,CAAC,UAAM,CACZ,GAAK,CAACgB,GAAF,GAAYF,YAAY,GAAK,CAAjB,EAAsB,CAACP,WAAxB,EAAyCO,YAAY,GAAK,CAAjB,EAAsBP,WAA1E,CAAJ,CAA6F,CACzFiB,UAAU,CAAC,UAAM,CACb,GAAIC,CAAAA,SAAS,CAAGpB,YAAY,CAACM,KAAD,CAAQG,YAAR,CAA5B,CACAF,QAAQ,CAACa,SAAD,CAAR,CACAjB,cAAc,CAAC,CAACD,WAAF,CAAd,CACH,CAJS,CAIP,GAJO,CAAV,CAKH,CACJ,CARQ,CAQN,CAACA,WAAD,CAAcO,YAAd,CARM,CAAT,CAUA,mBACI,aAAK,EAAE,CAAC,KAAR,wBACI,YAAK,EAAE,CAAC,MAAR,CAAe,SAAS,CAAED,SAA1B,UACKF,KAAK,CAACe,GAAN,CAAW,SAACC,GAAD,CAAMC,CAAN,CAAY,CACpB,mBACI,KAAC,GAAD,EAAkB,EAAE,CAAEA,CAAtB,CAAyB,KAAK,CAAED,GAAhC,CAAqC,OAAO,CAAEP,UAA9C,EAAUQ,CAAC,CAAG,CAAd,CADJ,CAGH,CAJA,CADL,EADJ,cASI,KAAC,MAAD,EAAQ,GAAG,CAAEZ,GAAb,CAAkB,KAAK,CAAEL,KAAzB,CAAgC,IAAI,CAAEG,YAAtC,CAAoD,OAAO,CAAES,UAA7D,EATJ,GADJ,CAaH,CAED,cAAejB,CAAAA,IAAf,CAGI","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Box from \"./Box\"\r\nimport Footer from \"./Footer\";\r\nimport winFunction from \"../functions/winFunction.js\"\r\nimport computerMove from \"../functions/computerMove\"\r\n\r\n// Legenda: \r\n// 0 || null = null\r\n// 1= cross\r\n// 2= circle\r\n\r\nfunction Game() {\r\n    const [crossIsNext, setCrossIsNext] = useState(true)\r\n    const [boxes, setBoxes] = useState(Array(9).fill(null))\r\n    const lineClass = winFunction(boxes)\r\n    const [computerTurn, setComputerTurn] = useState(2)\r\n    const win = handleWinner()\r\n    function handleWinner() {\r\n        if(boxes.includes(null) === false || lineClass !== undefined) { return true } else return false\r\n    }\r\n\r\n    function handleTurn(num) {\r\n        \r\n        if(boxes[num] === null && win === false) {\r\n            let tempArrayBoxes = [...boxes]\r\n            tempArrayBoxes[num] = crossIsNext ? 1 : 2\r\n            setBoxes(tempArrayBoxes)\r\n            setCrossIsNext(!crossIsNext)\r\n        }      \r\n    }\r\n\r\n    function handleGame() {\r\n        if (computerTurn === 1) {\r\n            setComputerTurn(2)\r\n        } else { \r\n            setComputerTurn(1)\r\n        }\r\n        setBoxes(Array(9).fill(null))\r\n        setCrossIsNext(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ((!win) && ((computerTurn === 2 && !crossIsNext) || (computerTurn === 1 && crossIsNext))) {\r\n            setTimeout(() => {\r\n                let tempBoxes = computerMove(boxes, computerTurn)\r\n                setBoxes(tempBoxes)\r\n                setCrossIsNext(!crossIsNext)\r\n            }, 150)\r\n        }   \r\n    }, [crossIsNext, computerTurn])\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <div id=\"game\" className={lineClass}>\r\n                {boxes.map( (box, i) => {\r\n                    return (\r\n                        <Box key={i + 1 } id={i} boxes={box} onClick={handleTurn}/>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n            <Footer win={win} boxes={boxes} turn={computerTurn} onClick={handleGame}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game\r\n\r\n\r\n    /* do a big check and if is okay jus style the text of the winner*/"]},"metadata":{},"sourceType":"module"}